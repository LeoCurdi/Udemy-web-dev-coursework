#alpha, #alpha2 {
    display: inline-block;
    width: 300px;
    height: 300px;
    background-color: magenta;
    margin-bottom: 1%;
}

/* the a (alpha) affects the transparency of the color */
#rgba {
    width: 50%;
    height: 50%;
    background-color: rgba(255, 255, 255, 0.5); /* only the bg color will be affected */

}

/* opacity applies to the entire element */
#opacity {
    width: 50%;
    height: 50%;
    background-color: red;
    opacity: .3;
}

#position div {
    width: 100px;
    height: 100px;
    background-color: gray;
    border: 2px solid black;
    margin: 10px;
    display: inline-block;
}

#middle {
    background-color: rgb(83, 83, 83) !important;
}

/* static makes it so you cant modify the position */
#static #middle {
    position: static;
    top: 100px; /* does nothing */
}

/* relative lets you offset the position relative to itself */
#relative #middle {
    position: relative;
    top: 50px;
    left: 100px;
}

/* absolute removes the element from the document flow, and no space is created for the element */
/* by default, the element will be positioned relative to its closest POSITIONED (anything other than static) ancestor, so it will stack under the 3rd box */
/* but when you modify the position, it will be placed relative to the initial containing block */
#absolute #middle {
    position: absolute;
    top: 1px;
    left: 1px;
}

/* without setting the middle's parent container's position. the middle element will position based on the top left of the html page. now it posiitions based on the top left of the absolute section */
#absolute {
    position: relative;
}

/* fixed is kind of like absoolute, except it will always appear in the same pixels on the screen */
#fixed #middle {
    position: fixed;
    bottom: 0;
    right: 0;
}

/* sticky. this doesn't seem to have worked */
#header {
    background-color: gray;
}

#nav {
    background-color: lightgray;
    position: -webkit-sticky;
    position: sticky;
    top: 100px;
}
